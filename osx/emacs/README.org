# EMACS

### Buffers

A buffer holds text and other information that is usually displayed in a window. The most obvious example is a buffer that contains the contents of a file for the purpose of editing it.

There are special buffers that are used for displaying *temporary* infomration or user interface elements. The Magit package provides an excellent interface for git inside of a custom emacs buffer.

Buffers can be one of the most confusing aspects of Emacs to beginners because you don't have any indication of what buffers are open until you try to switch to another buffer.

Some important buffers you will definitely see:

*scratch* - a blank sheet of paper to take notes.

*Messages* - Log messages and all text that gets written to the echo area at the bottom of the screen.

*Warnings* - A list of potential errors that may be displayed from time to time


### The Mode Line

The mode line is a line of text displayed at the bottom of every window (pane) in Emacs. It displays information about the current buffer you're viewing and also global status information:

- The line and column of the cursor
- The major mode of the buffer
- The minor modes active in the buffer (or globally in Emacs)

### The Echo Area and Minibuffer

The echo area is a line at the very bottom of the frame which displays informational text when you perform certain operations in Emacs.

It also turns into a prompt at times when you run a command that needs to accept user input; this prompt is called the "minibuffer"! You can think of it like a temp buffer that is used for interacting with the user. It can also expand its height to be slightly larger than a single line when needed.

(Emacs Manual: The Echo Area)[https://www.gnu.org/software/emacs/manual/html_node/emacs/Echo-Area.html]
(Emacs Manual: The Minibuffer)[https://www.gnu.org/software/emacs/manual/html_node/emacs/Minibuffer.html#Minibuffer]

### Commands

In Emacs there are a variety of built in commands that enable a lot of interesting and useful behavior, epsecially things that aren't specifically for text editing! Emacs is more of a personal productivity suite than a plain text editor.

To run a command, you can press `M-x`. This will bring up a prompt where you can type in the name of the command to be run.xtet

### Major and Minor Modes

In other editors, there is usually functionality that gets enabled for files with a particular extension.
Emacs also has this. This functionality is provided through something called a "major mode". A major mode provides the primary functinoality for a particular buffer and it is usually activated based on the extension of a file you open in that buffer.

As we've seen before, some buffers are not files and have special functinoality! This functinoality also comes from custom major mods. In this case, the major mode is being activated using a command, typically with the name of the mode.

The major mode is what we see down in the mode line which indicates what type of buffer we are looking it. There can only be one major mode active in a buffer at once!


### Minor Modes

Minor modes are different in that many minor modes can be active in a single buffer, and even globally across Emacs.

Minor modes typically provide helpful functionality that isn't specific to the major mode of the current buffer, but things you might need to customize your workflow or even change the display of things in Emacs.

### Emacs Keybindings

These single-letters can be interpreted as follows:

C - Ctrl
M - Alt (Meta in Emacs lingo)
S - Shift
s - Super (Windows key)

One important thing to mention is that:

`C-x` is a prefix for all of Emacs' primary key bindings like `C-x C-f`

`C-c` is considered to be a combination of bindings created by active major and minor modes or by the user!

### Cutting and Copying Text

In Emacs, to "kill" text means to "cut". It basically copy it and delete it.

The most ommon thing you will do is to kill a region, either to just delete the text or to cut it to be pasted somewhere else.

But to kill a region, you first need to select one! You can begin marking a region using `C-SPC` (set-mark-command) then use the arrow keys to move the cursor to expand or shrink the selection.

Now that you have a region selected, you can use `C-w` (kill-region) to cut the text or `M-w` (kill-ring-save) to copy it.

One interesting aspect of killing text is that it gets stored in the "kill ring" to be used later.

(Emacs Manual: Killing and Moving Text)[https://www.gnu.org/software/emacs/manual/html_node/emacs/Killing.html]

### Pasting Text

In typical Emacs style, the concept of "pasting" text has a different name: "yank".

You can press `C-y` to yank (paste) the most recent text from the kill ring back into this buffer.

### CUA Mode

Cua mode gives you the old `C-c` (Copy), `C-x` (Cut) and `C-v` (Paste) behavior that you're familiar with.

### How to exit Emacs

`C-x C-c`

### Working with Files

| Command | What it does           |
| ------- | ---------------------- |
| C-x C-f | Open (find) file       |
| C-x C-s | Save the current file  |
| C-x C-w | Save As                |
| C-x s   | Save any unsaved files |

### Cursor Movement

| Command | What it does                                          |
| ------- | ----------------------------------------------------- |
| C-f     | Move the cursor forward 1 character                   |
| C-b     | Move the cursor back 1 character                      |
| C-n     | Move the cursor to the next line (down)               |
| C-p     | Move the cursor to the previous line (up)             |
| M-f     | Move the cursor forward 1 word                        |
| M-b     | Move the cursor backward 1 word                       |
| C-a     | Move the cursor to the beginning of the line          |
| C-e     | Move the cursor to the end of the line                |
| M-a     | Move the cursor to the beginning of the paragraph     |
| M-e     | Move the cursor to the end of the paragraph           |
| C-v     | Move the cursor one page down                         |
| M-v     | Move the cursor one page up                           |
| M-<     | Move the cursor to the beginning of the file          |
| M->     | Move the cursor to the end of the file                |
| C-l     | Recenter the screen around the current line           |

### Editing

| Command       | What it does                           |
| C-k           | Kill rest of line or one or more lines |
| C-S-Backspace | Kill an entire line at once            |
|               |                                        |

### Emacs Windows

C-x 0: Close current window
C-x 1: Close all windows except current one
C-x 2: Split Vertically
C-x 3: Split Horizontally
C-x o: Switch between windows


### Emacs Buffers

To list all buffers, use the list buffers command, `C-x C-b`.

The buffer list displays 6 columns.

| Column | Contents                                                                                            |
| ------ | --------------------------------------------------------------------------------------------------- |
| M      | An asterisk (*) is displayed in this column if the buffer has been modified since it was last saved |
| R      | A percent sign (%) is displayed in this column if the buffer is read-only                           |
| Buffer | The name of the buffer                                                                              |
| Size   | Size of the buffer in Bytes                                                                         |
| Mode   | The Major mode active in the buffer                                                                 |
| File   | The name of the file, if any, load into the buffer                                                  |

To switch a buffer you can move the cursor to the line that displays the buffer.
You can also type C-x b and write the name of the buffer to open.

You can close a buffer ("kill" a buffer) by typing C-x k. If there are unsaved changes you'll be prompted to save the buffer first. If you want to save any unsaved changes in all open buffers, use the command C-x s.

### Emacs Frames

Only possible if you're running a GUI version of Emacs.

To create a new frame, use the command `C-x 5 2`.
To delete the current frame, use `C-x 5 0`.
To delete all but the current frame, use `C-x 5 1`.


## Ivy

Ivy is a generic completion mechanism for Emacs.

## Counsel

`ivy-mode` ensures that any Emacs command using `completing-read-function` uses ivy for completion.

Counsel takes this further, providing versions of common Emacs commands that are customised to make the best use of Ivy.

## Shells

### Eshell (Emacs Shell)


### Dired (Emacs as a File Browser)

Emacs has a powerful file browser built in.

Use `C-x d` to enter dired mode and give the path of a directory to open.
You can use `C-s` to search for a filename.

To create a new subdirectory, hit +.
To create a new file in the directory, just use `C-x C-f` as normal.

## PAREDIT

`M-q` - Reindent whole defun without moving point around.

## MAGIT

Git tool for Emacs.
Use forge if you need authentication to github.

`s` - stage
`c` - commit
`C-c C-c` - save commit message
`P` - Push
`u` - origin/master

## ORG MODE

`Shift+Tab` - Collapse/Expand Headings
`C-Enter` - Insert a same type heading below the current heading
`M-Enter` - Insert a same type heading above the current heading
`M-Up/Down` - Move/Reorganize headings above/below the same type ones
`C-c C-l` - Add link to a selection
`C-c C-o` - Open Link in Browser
`C-c C-x C-b` - Check/uncheck checkboxes

Add code snippets

#+begin_src emacs-lisp
  (defun my-elisp-func ()
    (message "Hello!"))
#+end_src

*TODO*
Add `TODO` to a Heading to transform it into a TODO
Toggle status with `C-c C-t` or `S-left` `S-right`




## TIPS & TRICKS

1. If you can't access a directory like Downloads or Documents, the reason is that they're iCloud sync directories.

To solve this problem:

1. Add Emacs to have Full Disk Access in OSX
2. Create a mock file in each of these directories, such as: *test.md*
3. Click `Cmd+O` to open a file - inside Emacs.
4. Open that file in every directory you need access.
5. DONE.

2. If you're missing a parens somewhere you can simply call `M-x` and type check-parens and it will show you where the missing parens is.

## TODO

1. Map CapsLock to Control to avoid Pinky problems in emacs.
